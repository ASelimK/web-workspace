* {
    box-sizing: border-box;
    margin: 0;
    position: relative;
  }
  
  :root {
    --basesize: 6vmin;
    --line: calc(var(--basesize) / 2);
    --color-line: white;
    --color-bg: black;
    --color-gradient: 0%;
    --anim-simple-unit: 2s;
  }
  
  $base-count: 6;
  $layer-count: 12;
  
  html {
    height: 100%;
    font-size: 100%;
  }
  
  body {
    min-height: 100%;
    font-family: sans-serif;
    display: grid;
    place-items: center center;
    background-color: var(--color-bg);
  }
  button {
    all: unset;
    display: inline-block;
    color: var(--color-line);
    border: 1px solid;
    padding: 0.25rem 0.5rem;
    cursor: pointer;
    border-radius: 2px;
    padding: 4px;
    &:hover {
      border-color: dodgerblue;
    }
    &:focus-visible {
      outline: 2px solid hotpink;
      outline-offset: 2px;
    }
  }
  
  .button-group {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    max-width: 100vw;
    padding: 0.5rem;
    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
    align-content: flex-end;
    z-index: 2;
    gap: 0.5rem;
    @media (min-width: 800px) {
      gap: 1rem;
      flex-direction: row;
      :first-child {
        margin-left: auto;
      }
    }
  
    button {
      min-width: 5rem;
      text-align: center;
      width: max-content;
    }
  }
  .app {
    width: 100vmin;
    height: 100vmin;
    background: var(--color-bg);
    max-width: 100vw;
    overflow: hidden;
  }
  
  .layers {
    position: absolute;
    transform: rotate(calc(1turn / $layer-count));
    width: inherit;
    height: inherit;
    max-width: 100vw;
    display: grid;
    grid-template-areas: "stacked";
    > * {
      grid-area: stacked;
      min-width: 0;
    }
  }
  
  .layer {
    border-radius: 50%;
    will-change: transform;
    margin: auto;
    max-width: 100vw;
    animation-iteration-count: infinite;
    animation-play-state: paused;
    animation-timing-function: cubic-bezier(0.37, 0, 0.63, 1);
    overflow: hidden;
  
    > * {
      position: absolute;
      inset: 0;
      border-radius: 50%;
      overflow: hidden;
    }
    > *::before {
      // The line
      content: "";
      display: block;
      position: absolute;
      background: var(--color-line);
      width: 2px;
      width: clamp(2px, 0.25vmin, 4px);
      height: var(--line);
      left: 50%;
      transform: translateX(-50%);
    }
  }
  
  // The 12 layer containers
  @for $i from 1 through $layer-count {
    .layer--#{$i} {
      width: calc(var(--basesize) * #{$i});
      height: calc(var(--basesize) * #{$i});
      background: var(--color-bg);
      background: hsl(($i * 30) % 360, 50%, var(--color-gradient));
      animation-delay: $i * 100ms;
      animation-duration: 600ms + 1ms * $i;
      animation-name: spin-#{$i};
    }
  }
  
  // The circle structure per layer container
  @for $ii from 1 through $layer-count {
    .layer--#{$ii} {
      @for $i from 1 through $base-count * $ii {
        :nth-child(#{$i}) {
          transform: rotate(((1turn / ($base-count * $ii)) * $i));
        }
      }
    }
  }
  
  .app[data-anim-running="true"] .layer {
    animation-play-state: running;
  }
  .app[data-reverse="true"] .layer {
    animation-direction: reverse;
  }
  .app[data-anim-mode="simple"] .layer {
    animation-duration: var(--anim-simple-unit) !important; // immutable
  }
  
  .reference {
    bottom: 4px;
    right: 4px;
    font-size: 1rem;
    position: absolute;
    color: #777;
    line-height: 1;
    a {
      font-size: inherit;
      color: inherit;
      line-height: inherit;
    }
  }
  
  @for $i from 1 through $layer-count {
    @keyframes spin-#{$i} {
      0% {
        transform: rotate(0deg);
      }
      50% {
        transform: rotate((360deg / ($i * $base-count)) + 0.0001deg);
      }
      100% {
        transform: rotate((360deg / ($i * $base-count)) + 0.0001deg);
      }
    }
  }
  
  // @media (prefers-color-scheme: light) {
  //   :root {
  //     --color-line: black;
  //     --color-bg: white;
  //   }
  // }
  
  // @media (prefers-color-scheme: dark) {
  //   :root {
  //     --color-line: white;
  //     --color-bg: black;
  //   }
  // }
  